// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tele.proto

package tele

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Priority int32

const (
	Priority_Default    Priority = 0
	Priority_Now        Priority = 1
	Priority_IdleEngine Priority = 2
	Priority_IdleUser   Priority = 4
)

var Priority_name = map[int32]string{
	0: "Default",
	1: "Now",
	2: "IdleEngine",
	4: "IdleUser",
}
var Priority_value = map[string]int32{
	"Default":    0,
	"Now":        1,
	"IdleEngine": 2,
	"IdleUser":   4,
}

func (x Priority) String() string {
	return proto.EnumName(Priority_name, int32(x))
}
func (Priority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{0}
}

type State int32

const (
	State_Invalid       State = 0
	State_Boot          State = 1
	State_Nominal       State = 2
	State_Disconnected  State = 3
	State_Problem       State = 4
	State_Service       State = 5
	State_Lock          State = 6
	State_Client        State = 7
	State_TempProblem   State = 8
	State_Shutdown      State = 9
	State_RemoteControl State = 10
)

var State_name = map[int32]string{
	0:  "Invalid",
	1:  "Boot",
	2:  "Nominal",
	3:  "Disconnected",
	4:  "Problem",
	5:  "Service",
	6:  "Lock",
	7:  "Client",
	8:  "TempProblem",
	9:  "Shutdown",
	10: "RemoteControl",
}
var State_value = map[string]int32{
	"Invalid":       0,
	"Boot":          1,
	"Nominal":       2,
	"Disconnected":  3,
	"Problem":       4,
	"Service":       5,
	"Lock":          6,
	"Client":        7,
	"TempProblem":   8,
	"Shutdown":      9,
	"RemoteControl": 10,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{1}
}

type PaymentMethod int32

const (
	PaymentMethod_Nothing  PaymentMethod = 0
	PaymentMethod_Cash     PaymentMethod = 1
	PaymentMethod_Cashless PaymentMethod = 2
	PaymentMethod_Gift     PaymentMethod = 3
	PaymentMethod_Balance  PaymentMethod = 4
)

var PaymentMethod_name = map[int32]string{
	0: "Nothing",
	1: "Cash",
	2: "Cashless",
	3: "Gift",
	4: "Balance",
}
var PaymentMethod_value = map[string]int32{
	"Nothing":  0,
	"Cash":     1,
	"Cashless": 2,
	"Gift":     3,
	"Balance":  4,
}

func (x PaymentMethod) String() string {
	return proto.EnumName(PaymentMethod_name, int32(x))
}
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{2}
}

type CmdReplay int32

const (
	CmdReplay_nothing  CmdReplay = 0
	CmdReplay_accepted CmdReplay = 1
	CmdReplay_done     CmdReplay = 2
	CmdReplay_busy     CmdReplay = 3
	CmdReplay_error    CmdReplay = 4
)

var CmdReplay_name = map[int32]string{
	0: "nothing",
	1: "accepted",
	2: "done",
	3: "busy",
	4: "error",
}
var CmdReplay_value = map[string]int32{
	"nothing":  0,
	"accepted": 1,
	"done":     2,
	"busy":     3,
	"error":    4,
}

func (x CmdReplay) String() string {
	return proto.EnumName(CmdReplay_name, int32(x))
}
func (CmdReplay) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{3}
}

type Inventory struct {
	Stocks               []*Inventory_StockItem `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Inventory) Reset()         { *m = Inventory{} }
func (m *Inventory) String() string { return proto.CompactTextString(m) }
func (*Inventory) ProtoMessage()    {}
func (*Inventory) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{0}
}
func (m *Inventory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inventory.Unmarshal(m, b)
}
func (m *Inventory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inventory.Marshal(b, m, deterministic)
}
func (dst *Inventory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inventory.Merge(dst, src)
}
func (m *Inventory) XXX_Size() int {
	return xxx_messageInfo_Inventory.Size(m)
}
func (m *Inventory) XXX_DiscardUnknown() {
	xxx_messageInfo_Inventory.DiscardUnknown(m)
}

var xxx_messageInfo_Inventory proto.InternalMessageInfo

func (m *Inventory) GetStocks() []*Inventory_StockItem {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type Inventory_StockItem struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value                int32    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Hopper               int32    `protobuf:"varint,4,opt,name=hopper,proto3" json:"hopper,omitempty"`
	Valuef               float32  `protobuf:"fixed32,5,opt,name=valuef,proto3" json:"valuef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Inventory_StockItem) Reset()         { *m = Inventory_StockItem{} }
func (m *Inventory_StockItem) String() string { return proto.CompactTextString(m) }
func (*Inventory_StockItem) ProtoMessage()    {}
func (*Inventory_StockItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{0, 0}
}
func (m *Inventory_StockItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inventory_StockItem.Unmarshal(m, b)
}
func (m *Inventory_StockItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inventory_StockItem.Marshal(b, m, deterministic)
}
func (dst *Inventory_StockItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inventory_StockItem.Merge(dst, src)
}
func (m *Inventory_StockItem) XXX_Size() int {
	return xxx_messageInfo_Inventory_StockItem.Size(m)
}
func (m *Inventory_StockItem) XXX_DiscardUnknown() {
	xxx_messageInfo_Inventory_StockItem.DiscardUnknown(m)
}

var xxx_messageInfo_Inventory_StockItem proto.InternalMessageInfo

func (m *Inventory_StockItem) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Inventory_StockItem) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Inventory_StockItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Inventory_StockItem) GetHopper() int32 {
	if m != nil {
		return m.Hopper
	}
	return 0
}

func (m *Inventory_StockItem) GetValuef() float32 {
	if m != nil {
		return m.Valuef
	}
	return 0
}

// Optimising for rare, bulk delivery on cell network.
// "Touching network" is expensive, while 10 or 900 bytes is about same cost.
type Telemetry struct {
	VmId                 int32                  `protobuf:"varint,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	Time                 int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Error                *Telemetry_Error       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Inventory            *Inventory             `protobuf:"bytes,4,opt,name=inventory,proto3" json:"inventory,omitempty"`
	MoneyCashbox         *Telemetry_Money       `protobuf:"bytes,5,opt,name=money_cashbox,json=moneyCashbox,proto3" json:"money_cashbox,omitempty"`
	Transaction          *Telemetry_Transaction `protobuf:"bytes,6,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Stat                 *Telemetry_Stat        `protobuf:"bytes,7,opt,name=stat,proto3" json:"stat,omitempty"`
	MoneySave            *Telemetry_Money       `protobuf:"bytes,8,opt,name=money_save,json=moneySave,proto3" json:"money_save,omitempty"`
	MoneyChange          *Telemetry_Money       `protobuf:"bytes,9,opt,name=money_change,json=moneyChange,proto3" json:"money_change,omitempty"`
	AtService            bool                   `protobuf:"varint,16,opt,name=at_service,json=atService,proto3" json:"at_service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Telemetry) Reset()         { *m = Telemetry{} }
func (m *Telemetry) String() string { return proto.CompactTextString(m) }
func (*Telemetry) ProtoMessage()    {}
func (*Telemetry) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{1}
}
func (m *Telemetry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry.Unmarshal(m, b)
}
func (m *Telemetry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry.Marshal(b, m, deterministic)
}
func (dst *Telemetry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry.Merge(dst, src)
}
func (m *Telemetry) XXX_Size() int {
	return xxx_messageInfo_Telemetry.Size(m)
}
func (m *Telemetry) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry proto.InternalMessageInfo

func (m *Telemetry) GetVmId() int32 {
	if m != nil {
		return m.VmId
	}
	return 0
}

func (m *Telemetry) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Telemetry) GetError() *Telemetry_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Telemetry) GetInventory() *Inventory {
	if m != nil {
		return m.Inventory
	}
	return nil
}

func (m *Telemetry) GetMoneyCashbox() *Telemetry_Money {
	if m != nil {
		return m.MoneyCashbox
	}
	return nil
}

func (m *Telemetry) GetTransaction() *Telemetry_Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *Telemetry) GetStat() *Telemetry_Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *Telemetry) GetMoneySave() *Telemetry_Money {
	if m != nil {
		return m.MoneySave
	}
	return nil
}

func (m *Telemetry) GetMoneyChange() *Telemetry_Money {
	if m != nil {
		return m.MoneyChange
	}
	return nil
}

func (m *Telemetry) GetAtService() bool {
	if m != nil {
		return m.AtService
	}
	return false
}

type Telemetry_Error struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Count                uint32   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Telemetry_Error) Reset()         { *m = Telemetry_Error{} }
func (m *Telemetry_Error) String() string { return proto.CompactTextString(m) }
func (*Telemetry_Error) ProtoMessage()    {}
func (*Telemetry_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{1, 0}
}
func (m *Telemetry_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry_Error.Unmarshal(m, b)
}
func (m *Telemetry_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry_Error.Marshal(b, m, deterministic)
}
func (dst *Telemetry_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry_Error.Merge(dst, src)
}
func (m *Telemetry_Error) XXX_Size() int {
	return xxx_messageInfo_Telemetry_Error.Size(m)
}
func (m *Telemetry_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry_Error proto.InternalMessageInfo

func (m *Telemetry_Error) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Telemetry_Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Telemetry_Error) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Telemetry_Money struct {
	TotalBills           uint32            `protobuf:"varint,1,opt,name=total_bills,json=totalBills,proto3" json:"total_bills,omitempty"`
	TotalCoins           uint32            `protobuf:"varint,2,opt,name=total_coins,json=totalCoins,proto3" json:"total_coins,omitempty"`
	Bills                map[uint32]uint32 `protobuf:"bytes,3,rep,name=bills,proto3" json:"bills,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Coins                map[uint32]uint32 `protobuf:"bytes,4,rep,name=coins,proto3" json:"coins,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Telemetry_Money) Reset()         { *m = Telemetry_Money{} }
func (m *Telemetry_Money) String() string { return proto.CompactTextString(m) }
func (*Telemetry_Money) ProtoMessage()    {}
func (*Telemetry_Money) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{1, 1}
}
func (m *Telemetry_Money) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry_Money.Unmarshal(m, b)
}
func (m *Telemetry_Money) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry_Money.Marshal(b, m, deterministic)
}
func (dst *Telemetry_Money) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry_Money.Merge(dst, src)
}
func (m *Telemetry_Money) XXX_Size() int {
	return xxx_messageInfo_Telemetry_Money.Size(m)
}
func (m *Telemetry_Money) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry_Money.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry_Money proto.InternalMessageInfo

func (m *Telemetry_Money) GetTotalBills() uint32 {
	if m != nil {
		return m.TotalBills
	}
	return 0
}

func (m *Telemetry_Money) GetTotalCoins() uint32 {
	if m != nil {
		return m.TotalCoins
	}
	return 0
}

func (m *Telemetry_Money) GetBills() map[uint32]uint32 {
	if m != nil {
		return m.Bills
	}
	return nil
}

func (m *Telemetry_Money) GetCoins() map[uint32]uint32 {
	if m != nil {
		return m.Coins
	}
	return nil
}

type Telemetry_Transaction struct {
	Code                 string        `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Options              []int32       `protobuf:"varint,2,rep,packed,name=options,proto3" json:"options,omitempty"`
	Price                uint32        `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	PaymentMethod        PaymentMethod `protobuf:"varint,4,opt,name=payment_method,json=paymentMethod,proto3,enum=tele.PaymentMethod" json:"payment_method,omitempty"`
	CreditBills          uint32        `protobuf:"varint,5,opt,name=credit_bills,json=creditBills,proto3" json:"credit_bills,omitempty"`
	CreditCoins          uint32        `protobuf:"varint,6,opt,name=credit_coins,json=creditCoins,proto3" json:"credit_coins,omitempty"`
	Spent                *Inventory    `protobuf:"bytes,7,opt,name=spent,proto3" json:"spent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Telemetry_Transaction) Reset()         { *m = Telemetry_Transaction{} }
func (m *Telemetry_Transaction) String() string { return proto.CompactTextString(m) }
func (*Telemetry_Transaction) ProtoMessage()    {}
func (*Telemetry_Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{1, 2}
}
func (m *Telemetry_Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry_Transaction.Unmarshal(m, b)
}
func (m *Telemetry_Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry_Transaction.Marshal(b, m, deterministic)
}
func (dst *Telemetry_Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry_Transaction.Merge(dst, src)
}
func (m *Telemetry_Transaction) XXX_Size() int {
	return xxx_messageInfo_Telemetry_Transaction.Size(m)
}
func (m *Telemetry_Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry_Transaction proto.InternalMessageInfo

func (m *Telemetry_Transaction) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Telemetry_Transaction) GetOptions() []int32 {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Telemetry_Transaction) GetPrice() uint32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Telemetry_Transaction) GetPaymentMethod() PaymentMethod {
	if m != nil {
		return m.PaymentMethod
	}
	return PaymentMethod_Nothing
}

func (m *Telemetry_Transaction) GetCreditBills() uint32 {
	if m != nil {
		return m.CreditBills
	}
	return 0
}

func (m *Telemetry_Transaction) GetCreditCoins() uint32 {
	if m != nil {
		return m.CreditCoins
	}
	return 0
}

func (m *Telemetry_Transaction) GetSpent() *Inventory {
	if m != nil {
		return m.Spent
	}
	return nil
}

type Telemetry_Stat struct {
	Activity             uint32            `protobuf:"varint,1,opt,name=activity,proto3" json:"activity,omitempty"`
	BillRejected         map[uint32]uint32 `protobuf:"bytes,16,rep,name=bill_rejected,json=billRejected,proto3" json:"bill_rejected,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CoinRejected         map[uint32]uint32 `protobuf:"bytes,17,rep,name=coin_rejected,json=coinRejected,proto3" json:"coin_rejected,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CoinSlug             uint32            `protobuf:"varint,18,opt,name=coin_slug,json=coinSlug,proto3" json:"coin_slug,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Telemetry_Stat) Reset()         { *m = Telemetry_Stat{} }
func (m *Telemetry_Stat) String() string { return proto.CompactTextString(m) }
func (*Telemetry_Stat) ProtoMessage()    {}
func (*Telemetry_Stat) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{1, 3}
}
func (m *Telemetry_Stat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Telemetry_Stat.Unmarshal(m, b)
}
func (m *Telemetry_Stat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Telemetry_Stat.Marshal(b, m, deterministic)
}
func (dst *Telemetry_Stat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Telemetry_Stat.Merge(dst, src)
}
func (m *Telemetry_Stat) XXX_Size() int {
	return xxx_messageInfo_Telemetry_Stat.Size(m)
}
func (m *Telemetry_Stat) XXX_DiscardUnknown() {
	xxx_messageInfo_Telemetry_Stat.DiscardUnknown(m)
}

var xxx_messageInfo_Telemetry_Stat proto.InternalMessageInfo

func (m *Telemetry_Stat) GetActivity() uint32 {
	if m != nil {
		return m.Activity
	}
	return 0
}

func (m *Telemetry_Stat) GetBillRejected() map[uint32]uint32 {
	if m != nil {
		return m.BillRejected
	}
	return nil
}

func (m *Telemetry_Stat) GetCoinRejected() map[uint32]uint32 {
	if m != nil {
		return m.CoinRejected
	}
	return nil
}

func (m *Telemetry_Stat) GetCoinSlug() uint32 {
	if m != nil {
		return m.CoinSlug
	}
	return 0
}

type Command struct {
	//  uint32 id = 1;
	//  string reply_topic = 2;
	//  int64 deadline = 3;
	//  Priority priority = 4;
	Executer uint32 `protobuf:"varint,5,opt,name=executer,proto3" json:"executer,omitempty"`
	// Types that are valid to be assigned to Task:
	//	*Command_Report
	//	*Command_Exec
	//	*Command_SetInventory
	//	*Command_SetConfig
	//	*Command_Show_QR
	Task                 isCommand_Task `protobuf_oneof:"task"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{2}
}
func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (dst *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(dst, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetExecuter() uint32 {
	if m != nil {
		return m.Executer
	}
	return 0
}

type isCommand_Task interface {
	isCommand_Task()
}

type Command_Report struct {
	Report *Command_ArgReport `protobuf:"bytes,16,opt,name=report,proto3,oneof"`
}

type Command_Exec struct {
	Exec *Command_ArgExec `protobuf:"bytes,18,opt,name=exec,proto3,oneof"`
}

type Command_SetInventory struct {
	SetInventory *Command_ArgSetInventory `protobuf:"bytes,19,opt,name=set_inventory,json=setInventory,proto3,oneof"`
}

type Command_SetConfig struct {
	SetConfig *Command_ArgSetConfig `protobuf:"bytes,20,opt,name=set_config,json=setConfig,proto3,oneof"`
}

type Command_Show_QR struct {
	Show_QR *Command_ArgShowQR `protobuf:"bytes,22,opt,name=show_QR,json=showQR,proto3,oneof"`
}

func (*Command_Report) isCommand_Task() {}

func (*Command_Exec) isCommand_Task() {}

func (*Command_SetInventory) isCommand_Task() {}

func (*Command_SetConfig) isCommand_Task() {}

func (*Command_Show_QR) isCommand_Task() {}

func (m *Command) GetTask() isCommand_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *Command) GetReport() *Command_ArgReport {
	if x, ok := m.GetTask().(*Command_Report); ok {
		return x.Report
	}
	return nil
}

func (m *Command) GetExec() *Command_ArgExec {
	if x, ok := m.GetTask().(*Command_Exec); ok {
		return x.Exec
	}
	return nil
}

func (m *Command) GetSetInventory() *Command_ArgSetInventory {
	if x, ok := m.GetTask().(*Command_SetInventory); ok {
		return x.SetInventory
	}
	return nil
}

func (m *Command) GetSetConfig() *Command_ArgSetConfig {
	if x, ok := m.GetTask().(*Command_SetConfig); ok {
		return x.SetConfig
	}
	return nil
}

func (m *Command) GetShow_QR() *Command_ArgShowQR {
	if x, ok := m.GetTask().(*Command_Show_QR); ok {
		return x.Show_QR
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Command) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Command_OneofMarshaler, _Command_OneofUnmarshaler, _Command_OneofSizer, []interface{}{
		(*Command_Report)(nil),
		(*Command_Exec)(nil),
		(*Command_SetInventory)(nil),
		(*Command_SetConfig)(nil),
		(*Command_Show_QR)(nil),
	}
}

func _Command_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Command)
	// task
	switch x := m.Task.(type) {
	case *Command_Report:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Report); err != nil {
			return err
		}
	case *Command_Exec:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Exec); err != nil {
			return err
		}
	case *Command_SetInventory:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetInventory); err != nil {
			return err
		}
	case *Command_SetConfig:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetConfig); err != nil {
			return err
		}
	case *Command_Show_QR:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Show_QR); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Command.Task has unexpected type %T", x)
	}
	return nil
}

func _Command_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Command)
	switch tag {
	case 16: // task.report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Command_ArgReport)
		err := b.DecodeMessage(msg)
		m.Task = &Command_Report{msg}
		return true, err
	case 18: // task.exec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Command_ArgExec)
		err := b.DecodeMessage(msg)
		m.Task = &Command_Exec{msg}
		return true, err
	case 19: // task.set_inventory
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Command_ArgSetInventory)
		err := b.DecodeMessage(msg)
		m.Task = &Command_SetInventory{msg}
		return true, err
	case 20: // task.set_config
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Command_ArgSetConfig)
		err := b.DecodeMessage(msg)
		m.Task = &Command_SetConfig{msg}
		return true, err
	case 22: // task.show_QR
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Command_ArgShowQR)
		err := b.DecodeMessage(msg)
		m.Task = &Command_Show_QR{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Command_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Command)
	// task
	switch x := m.Task.(type) {
	case *Command_Report:
		s := proto.Size(x.Report)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Exec:
		s := proto.Size(x.Exec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_SetInventory:
		s := proto.Size(x.SetInventory)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_SetConfig:
		s := proto.Size(x.SetConfig)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Show_QR:
		s := proto.Size(x.Show_QR)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Command_ArgReport struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgReport) Reset()         { *m = Command_ArgReport{} }
func (m *Command_ArgReport) String() string { return proto.CompactTextString(m) }
func (*Command_ArgReport) ProtoMessage()    {}
func (*Command_ArgReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{2, 0}
}
func (m *Command_ArgReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgReport.Unmarshal(m, b)
}
func (m *Command_ArgReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgReport.Marshal(b, m, deterministic)
}
func (dst *Command_ArgReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgReport.Merge(dst, src)
}
func (m *Command_ArgReport) XXX_Size() int {
	return xxx_messageInfo_Command_ArgReport.Size(m)
}
func (m *Command_ArgReport) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgReport.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgReport proto.InternalMessageInfo

//  message ArgLock { int32 duration = 1; }
type Command_ArgExec struct {
	Scenario             string   `protobuf:"bytes,1,opt,name=scenario,proto3" json:"scenario,omitempty"`
	Executer             uint32   `protobuf:"varint,2,opt,name=executer,proto3" json:"executer,omitempty"`
	Lock                 bool     `protobuf:"varint,3,opt,name=lock,proto3" json:"lock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgExec) Reset()         { *m = Command_ArgExec{} }
func (m *Command_ArgExec) String() string { return proto.CompactTextString(m) }
func (*Command_ArgExec) ProtoMessage()    {}
func (*Command_ArgExec) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{2, 1}
}
func (m *Command_ArgExec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgExec.Unmarshal(m, b)
}
func (m *Command_ArgExec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgExec.Marshal(b, m, deterministic)
}
func (dst *Command_ArgExec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgExec.Merge(dst, src)
}
func (m *Command_ArgExec) XXX_Size() int {
	return xxx_messageInfo_Command_ArgExec.Size(m)
}
func (m *Command_ArgExec) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgExec.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgExec proto.InternalMessageInfo

func (m *Command_ArgExec) GetScenario() string {
	if m != nil {
		return m.Scenario
	}
	return ""
}

func (m *Command_ArgExec) GetExecuter() uint32 {
	if m != nil {
		return m.Executer
	}
	return 0
}

func (m *Command_ArgExec) GetLock() bool {
	if m != nil {
		return m.Lock
	}
	return false
}

type Command_ArgSetInventory struct {
	New                  *Inventory `protobuf:"bytes,1,opt,name=new,proto3" json:"new,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Command_ArgSetInventory) Reset()         { *m = Command_ArgSetInventory{} }
func (m *Command_ArgSetInventory) String() string { return proto.CompactTextString(m) }
func (*Command_ArgSetInventory) ProtoMessage()    {}
func (*Command_ArgSetInventory) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{2, 2}
}
func (m *Command_ArgSetInventory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgSetInventory.Unmarshal(m, b)
}
func (m *Command_ArgSetInventory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgSetInventory.Marshal(b, m, deterministic)
}
func (dst *Command_ArgSetInventory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgSetInventory.Merge(dst, src)
}
func (m *Command_ArgSetInventory) XXX_Size() int {
	return xxx_messageInfo_Command_ArgSetInventory.Size(m)
}
func (m *Command_ArgSetInventory) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgSetInventory.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgSetInventory proto.InternalMessageInfo

func (m *Command_ArgSetInventory) GetNew() *Inventory {
	if m != nil {
		return m.New
	}
	return nil
}

type Command_ArgSetConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	New                  []byte   `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgSetConfig) Reset()         { *m = Command_ArgSetConfig{} }
func (m *Command_ArgSetConfig) String() string { return proto.CompactTextString(m) }
func (*Command_ArgSetConfig) ProtoMessage()    {}
func (*Command_ArgSetConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{2, 3}
}
func (m *Command_ArgSetConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgSetConfig.Unmarshal(m, b)
}
func (m *Command_ArgSetConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgSetConfig.Marshal(b, m, deterministic)
}
func (dst *Command_ArgSetConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgSetConfig.Merge(dst, src)
}
func (m *Command_ArgSetConfig) XXX_Size() int {
	return xxx_messageInfo_Command_ArgSetConfig.Size(m)
}
func (m *Command_ArgSetConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgSetConfig.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgSetConfig proto.InternalMessageInfo

func (m *Command_ArgSetConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Command_ArgSetConfig) GetNew() []byte {
	if m != nil {
		return m.New
	}
	return nil
}

//  message ArgStop { int32 timeout = 1; }
type Command_ArgShowQR struct {
	Layout               string   `protobuf:"bytes,1,opt,name=layout,proto3" json:"layout,omitempty"`
	QrText               string   `protobuf:"bytes,2,opt,name=qr_text,json=qrText,proto3" json:"qr_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command_ArgShowQR) Reset()         { *m = Command_ArgShowQR{} }
func (m *Command_ArgShowQR) String() string { return proto.CompactTextString(m) }
func (*Command_ArgShowQR) ProtoMessage()    {}
func (*Command_ArgShowQR) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{2, 4}
}
func (m *Command_ArgShowQR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command_ArgShowQR.Unmarshal(m, b)
}
func (m *Command_ArgShowQR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command_ArgShowQR.Marshal(b, m, deterministic)
}
func (dst *Command_ArgShowQR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command_ArgShowQR.Merge(dst, src)
}
func (m *Command_ArgShowQR) XXX_Size() int {
	return xxx_messageInfo_Command_ArgShowQR.Size(m)
}
func (m *Command_ArgShowQR) XXX_DiscardUnknown() {
	xxx_messageInfo_Command_ArgShowQR.DiscardUnknown(m)
}

var xxx_messageInfo_Command_ArgShowQR proto.InternalMessageInfo

func (m *Command_ArgShowQR) GetLayout() string {
	if m != nil {
		return m.Layout
	}
	return ""
}

func (m *Command_ArgShowQR) GetQrText() string {
	if m != nil {
		return m.QrText
	}
	return ""
}

type Response struct {
	CommandId            uint32    `protobuf:"varint,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Error                string    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data                 string    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Executer             uint32    `protobuf:"varint,4,opt,name=executer,proto3" json:"executer,omitempty"`
	CmdReplay            CmdReplay `protobuf:"varint,5,opt,name=cmd_replay,json=cmdReplay,proto3,enum=tele.CmdReplay" json:"cmd_replay,omitempty"`
	INTERNALTopic        string    `protobuf:"bytes,2048,opt,name=INTERNAL_topic,json=INTERNALTopic,proto3" json:"INTERNAL_topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_tele_bfa8e4ba6aa08fab, []int{3}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCommandId() uint32 {
	if m != nil {
		return m.CommandId
	}
	return 0
}

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Response) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Response) GetExecuter() uint32 {
	if m != nil {
		return m.Executer
	}
	return 0
}

func (m *Response) GetCmdReplay() CmdReplay {
	if m != nil {
		return m.CmdReplay
	}
	return CmdReplay_nothing
}

func (m *Response) GetINTERNALTopic() string {
	if m != nil {
		return m.INTERNALTopic
	}
	return ""
}

func init() {
	proto.RegisterType((*Inventory)(nil), "tele.Inventory")
	proto.RegisterType((*Inventory_StockItem)(nil), "tele.Inventory.StockItem")
	proto.RegisterType((*Telemetry)(nil), "tele.Telemetry")
	proto.RegisterType((*Telemetry_Error)(nil), "tele.Telemetry.Error")
	proto.RegisterType((*Telemetry_Money)(nil), "tele.Telemetry.Money")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tele.Telemetry.Money.BillsEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tele.Telemetry.Money.CoinsEntry")
	proto.RegisterType((*Telemetry_Transaction)(nil), "tele.Telemetry.Transaction")
	proto.RegisterType((*Telemetry_Stat)(nil), "tele.Telemetry.Stat")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tele.Telemetry.Stat.BillRejectedEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tele.Telemetry.Stat.CoinRejectedEntry")
	proto.RegisterType((*Command)(nil), "tele.Command")
	proto.RegisterType((*Command_ArgReport)(nil), "tele.Command.ArgReport")
	proto.RegisterType((*Command_ArgExec)(nil), "tele.Command.ArgExec")
	proto.RegisterType((*Command_ArgSetInventory)(nil), "tele.Command.ArgSetInventory")
	proto.RegisterType((*Command_ArgSetConfig)(nil), "tele.Command.ArgSetConfig")
	proto.RegisterType((*Command_ArgShowQR)(nil), "tele.Command.ArgShowQR")
	proto.RegisterType((*Response)(nil), "tele.Response")
	proto.RegisterEnum("tele.Priority", Priority_name, Priority_value)
	proto.RegisterEnum("tele.State", State_name, State_value)
	proto.RegisterEnum("tele.PaymentMethod", PaymentMethod_name, PaymentMethod_value)
	proto.RegisterEnum("tele.CmdReplay", CmdReplay_name, CmdReplay_value)
}

func init() { proto.RegisterFile("tele.proto", fileDescriptor_tele_bfa8e4ba6aa08fab) }

var fileDescriptor_tele_bfa8e4ba6aa08fab = []byte{
	// 1292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdd, 0x6e, 0xdb, 0xb6,
	0x17, 0x8f, 0x6c, 0xc9, 0xb6, 0x8e, 0xed, 0x54, 0x61, 0xfb, 0x6f, 0xf5, 0x77, 0x51, 0x2c, 0x0d,
	0xb0, 0xc2, 0x48, 0xb1, 0x00, 0xcb, 0x8a, 0xa1, 0xe8, 0x3e, 0x8a, 0xc6, 0x0d, 0x16, 0xa3, 0x6d,
	0xd0, 0xd2, 0xe9, 0xb5, 0xc1, 0x48, 0x8c, 0xad, 0x45, 0x22, 0x55, 0x91, 0x76, 0xe2, 0xbb, 0x3d,
	0xc8, 0x80, 0x3d, 0xc1, 0x1e, 0x60, 0x4f, 0xb0, 0xfb, 0xdd, 0xee, 0x4d, 0x76, 0x35, 0x1c, 0x52,
	0xfe, 0x88, 0x93, 0x05, 0xe8, 0x1d, 0xcf, 0xe1, 0xef, 0xf7, 0xd3, 0xf9, 0xe0, 0x21, 0x05, 0xa0,
	0x79, 0xca, 0xf7, 0xf2, 0x42, 0x6a, 0x49, 0x5c, 0x5c, 0xef, 0xfc, 0xe1, 0x80, 0xdf, 0x17, 0x53,
	0x2e, 0xb4, 0x2c, 0x66, 0xe4, 0x6b, 0xa8, 0x29, 0x2d, 0xa3, 0x73, 0x15, 0x3a, 0xdb, 0xd5, 0x6e,
	0x73, 0xff, 0xff, 0x7b, 0x86, 0xb0, 0x00, 0xec, 0x0d, 0x70, 0xb7, 0xaf, 0x79, 0x46, 0x4b, 0x60,
	0x67, 0x06, 0xfe, 0xc2, 0x49, 0x08, 0xb8, 0x91, 0x8c, 0x79, 0xe8, 0x6c, 0x3b, 0xdd, 0x36, 0x35,
	0x6b, 0x72, 0x0f, 0xbc, 0x29, 0x4b, 0x27, 0x3c, 0xac, 0x6c, 0x3b, 0x5d, 0x8f, 0x5a, 0x03, 0x91,
	0x82, 0x65, 0x3c, 0xac, 0x6e, 0x3b, 0x5d, 0x9f, 0x9a, 0x35, 0xb9, 0x0f, 0xb5, 0xb1, 0xcc, 0x73,
	0x5e, 0x84, 0xae, 0x81, 0x96, 0x16, 0xfa, 0x0d, 0xe9, 0x2c, 0xf4, 0xb6, 0x9d, 0x6e, 0x85, 0x96,
	0xd6, 0xce, 0xaf, 0x4d, 0xf0, 0x4f, 0x78, 0xca, 0x33, 0xae, 0x8b, 0x19, 0xb9, 0x0b, 0xde, 0x34,
	0x1b, 0x26, 0xb1, 0xf9, 0xb8, 0x47, 0xdd, 0x69, 0xd6, 0x8f, 0xf1, 0x33, 0x3a, 0xc9, 0xec, 0xb7,
	0xab, 0xd4, 0xac, 0xc9, 0x53, 0xf0, 0x78, 0x51, 0xc8, 0xc2, 0x7c, 0xbb, 0xb9, 0xff, 0x3f, 0x9b,
	0xe3, 0x42, 0x68, 0xef, 0x10, 0x37, 0xa9, 0xc5, 0x90, 0xaf, 0xc0, 0x4f, 0xe6, 0xd9, 0x9b, 0xb0,
	0x9a, 0xfb, 0x77, 0xd6, 0x8a, 0x42, 0x97, 0x08, 0xf2, 0x02, 0xda, 0x99, 0x14, 0x7c, 0x36, 0x8c,
	0x98, 0x1a, 0x9f, 0xca, 0x4b, 0x13, 0xf1, 0x0d, 0xdf, 0x78, 0x87, 0x20, 0xda, 0x32, 0xd8, 0x9e,
	0x85, 0x92, 0x1f, 0xa0, 0xa9, 0x0b, 0x26, 0x14, 0x8b, 0x74, 0x22, 0x45, 0x58, 0x33, 0xcc, 0x87,
	0xeb, 0xcc, 0x93, 0x25, 0x84, 0xae, 0xe2, 0x49, 0x17, 0x5c, 0xa5, 0x99, 0x0e, 0xeb, 0x86, 0x77,
	0x6f, 0x9d, 0x37, 0xd0, 0x4c, 0x53, 0x83, 0x20, 0xcf, 0x00, 0x6c, 0x90, 0x8a, 0x4d, 0x79, 0xd8,
	0xb8, 0x2d, 0x42, 0xdf, 0x00, 0x07, 0x6c, 0xca, 0xc9, 0x73, 0x68, 0x95, 0xa9, 0x8d, 0x99, 0x18,
	0xf1, 0xd0, 0xbf, 0x8d, 0xd7, 0xb4, 0x99, 0x19, 0x24, 0x79, 0x04, 0xc0, 0xf4, 0x50, 0xf1, 0x62,
	0x9a, 0x44, 0x3c, 0x0c, 0xb6, 0x9d, 0x6e, 0x83, 0xfa, 0x4c, 0x0f, 0xac, 0xa3, 0xf3, 0x06, 0x3c,
	0x53, 0xf2, 0x1b, 0x4f, 0x4f, 0x08, 0xf5, 0x8c, 0x2b, 0xc5, 0x46, 0xb6, 0x87, 0x3e, 0x9d, 0x9b,
	0x78, 0xae, 0x22, 0x39, 0x11, 0xda, 0xb4, 0xb1, 0x4d, 0xad, 0xd1, 0xf9, 0xbd, 0x02, 0x9e, 0x09,
	0x81, 0x7c, 0x01, 0x4d, 0x2d, 0x35, 0x4b, 0x87, 0xa7, 0x49, 0x9a, 0xaa, 0x52, 0x14, 0x8c, 0xeb,
	0x00, 0x3d, 0x4b, 0x40, 0x24, 0x13, 0xa1, 0x8c, 0xfc, 0x1c, 0xd0, 0x43, 0x0f, 0xf9, 0x16, 0x3c,
	0xcb, 0xad, 0x9a, 0x61, 0xd8, 0xbe, 0x31, 0xd5, 0x3d, 0x23, 0x76, 0x28, 0x74, 0x31, 0xa3, 0x16,
	0x8e, 0x3c, 0x2b, 0xe9, 0xde, 0xc6, 0x33, 0xdf, 0x28, 0x79, 0x06, 0xde, 0x79, 0x0e, 0xb0, 0x14,
	0x23, 0x01, 0x54, 0xcf, 0xf9, 0xac, 0x8c, 0x1b, 0x97, 0x57, 0x27, 0xa9, 0x5d, 0x4e, 0xd2, 0x8b,
	0xca, 0x73, 0x07, 0x99, 0x4b, 0xb9, 0xcf, 0x62, 0xfe, 0xe3, 0x40, 0x73, 0xe5, 0x48, 0x5d, 0xe9,
	0x81, 0xbf, 0xec, 0x81, 0xcc, 0x71, 0x17, 0x8b, 0x54, 0xed, 0x7a, 0x74, 0x6e, 0xa2, 0x6e, 0x5e,
	0x60, 0x53, 0xcb, 0x1e, 0x18, 0x83, 0xbc, 0x80, 0xcd, 0x9c, 0xcd, 0x32, 0x2e, 0xf4, 0x30, 0xe3,
	0x7a, 0x2c, 0x63, 0x33, 0x38, 0x9b, 0xfb, 0x77, 0x6d, 0x21, 0xde, 0xdb, 0xbd, 0x77, 0x66, 0x8b,
	0xb6, 0xf3, 0x55, 0x93, 0x3c, 0x86, 0x56, 0x54, 0xf0, 0x38, 0xd1, 0x65, 0xdb, 0x3c, 0x23, 0xdc,
	0xb4, 0x3e, 0xdb, 0xb7, 0x25, 0xc4, 0x56, 0xb9, 0xb6, 0x0a, 0xb1, 0x9d, 0xfb, 0x12, 0x3c, 0x95,
	0x73, 0x31, 0x1f, 0x86, 0x6b, 0x13, 0x6b, 0x77, 0x3b, 0x7f, 0x57, 0xc0, 0xc5, 0xb9, 0x20, 0x1d,
	0x68, 0x60, 0xfe, 0xd3, 0x44, 0xcf, 0xcb, 0xb6, 0xb0, 0xc9, 0x1b, 0x68, 0x63, 0x28, 0xc3, 0x82,
	0xff, 0xcc, 0x23, 0xcd, 0xe3, 0x30, 0x30, 0x5d, 0x7d, 0x72, 0xd3, 0x80, 0x99, 0xc3, 0x40, 0x4b,
	0xa0, 0xed, 0x6d, 0xeb, 0x74, 0xc5, 0x85, 0x62, 0x18, 0xf4, 0x52, 0x6c, 0xeb, 0x16, 0x31, 0xcc,
	0x65, 0x4d, 0x2c, 0x5a, 0x71, 0x91, 0x87, 0xe0, 0x1b, 0x31, 0x95, 0x4e, 0x46, 0x21, 0xb1, 0x61,
	0xa3, 0x63, 0x90, 0x4e, 0x46, 0x9d, 0x97, 0xb0, 0x75, 0x2d, 0x98, 0xcf, 0x3a, 0x19, 0x2f, 0x61,
	0xeb, 0x5a, 0x00, 0x9f, 0x23, 0xb0, 0xf3, 0x97, 0x0b, 0xf5, 0x9e, 0xcc, 0x32, 0x26, 0x62, 0x2c,
	0x30, 0xbf, 0xe4, 0xd1, 0x44, 0xf3, 0xa2, 0x6c, 0xe9, 0xc2, 0xc6, 0x47, 0xa7, 0xe0, 0xb9, 0x2c,
	0xb4, 0xb9, 0x1a, 0x9a, 0xfb, 0x0f, 0x6c, 0x31, 0x4a, 0xea, 0xde, 0xab, 0x62, 0x44, 0xcd, 0xf6,
	0xd1, 0x06, 0x2d, 0x81, 0xe4, 0x29, 0xb8, 0x48, 0x37, 0x49, 0x2f, 0xee, 0xa0, 0x15, 0xc2, 0xe1,
	0x25, 0x8f, 0x8e, 0x36, 0xa8, 0x01, 0x91, 0xd7, 0xd0, 0x56, 0x5c, 0x0f, 0x97, 0xd7, 0xf8, 0x5d,
	0xc3, 0x7a, 0x74, 0x8d, 0x35, 0xe0, 0x7a, 0x71, 0x44, 0x8e, 0x36, 0x68, 0x4b, 0xad, 0xd8, 0xe4,
	0x3b, 0x00, 0x54, 0x89, 0xa4, 0x38, 0x4b, 0x46, 0xe1, 0x3d, 0x23, 0xd1, 0xb9, 0x49, 0xa2, 0x67,
	0x10, 0x47, 0x1b, 0xd4, 0x57, 0x73, 0x83, 0xec, 0x43, 0x5d, 0x8d, 0xe5, 0xc5, 0xf0, 0x03, 0x0d,
	0xef, 0xff, 0x47, 0x8e, 0x83, 0xb1, 0xbc, 0xf8, 0x40, 0x31, 0x47, 0x65, 0x56, 0x9d, 0x26, 0xf8,
	0x8b, 0xd4, 0x3b, 0x1f, 0xa1, 0x5e, 0xa6, 0x85, 0xa5, 0x54, 0x11, 0x17, 0xac, 0x48, 0x64, 0x39,
	0xa5, 0x0b, 0xfb, 0x4a, 0x99, 0x2b, 0x6b, 0x65, 0x26, 0xe0, 0xa6, 0x32, 0x3a, 0x37, 0xa3, 0xda,
	0xa0, 0x66, 0xdd, 0x79, 0x06, 0x77, 0xd6, 0xf2, 0x26, 0x8f, 0xa1, 0x2a, 0xf8, 0x85, 0x51, 0xbe,
	0x61, 0x70, 0x70, 0xaf, 0xf3, 0x0c, 0x5a, 0xab, 0xa9, 0x2e, 0xde, 0x72, 0x67, 0xe5, 0x2d, 0x0f,
	0xac, 0x0c, 0x06, 0xd1, 0xb2, 0xac, 0xef, 0x4d, 0x3e, 0x36, 0x4d, 0x7c, 0xd2, 0x53, 0x36, 0x93,
	0x13, 0x5d, 0x92, 0x4a, 0x8b, 0x3c, 0x80, 0xfa, 0xa7, 0x62, 0xa8, 0xf9, 0xa5, 0x2e, 0xaf, 0xfb,
	0xda, 0xa7, 0xe2, 0x84, 0x5f, 0xea, 0x83, 0x1a, 0xb8, 0x9a, 0xa9, 0xf3, 0x9d, 0x3f, 0x1d, 0x68,
	0x50, 0xae, 0x72, 0x29, 0x94, 0x79, 0x58, 0x22, 0x5b, 0xc1, 0xf9, 0xbb, 0xdf, 0xa6, 0x7e, 0xe9,
	0xe9, 0xc7, 0x78, 0x34, 0xed, 0x43, 0x6f, 0xa5, 0xca, 0x17, 0x9d, 0x80, 0x1b, 0x33, 0xcd, 0xe6,
	0x7f, 0x1e, 0xb8, 0xbe, 0x52, 0x37, 0x77, 0xad, 0x6e, 0x7b, 0x00, 0x51, 0x16, 0x0f, 0x0b, 0x9e,
	0xa7, 0x6c, 0x66, 0x0e, 0xef, 0xe6, 0xbc, 0x2e, 0xbd, 0x2c, 0xa6, 0xc6, 0x4d, 0xfd, 0x68, 0xbe,
	0x24, 0x4f, 0x60, 0xb3, 0x7f, 0x7c, 0x72, 0x48, 0x8f, 0x5f, 0xbd, 0x1d, 0x6a, 0x99, 0x27, 0x51,
	0xf8, 0x4b, 0x60, 0x3e, 0xd5, 0x9e, 0xbb, 0x4f, 0xd0, 0xbb, 0xfb, 0x23, 0x34, 0xde, 0x17, 0x89,
	0x2c, 0xf0, 0x8e, 0x69, 0x42, 0xfd, 0x35, 0x3f, 0x63, 0x93, 0x54, 0x07, 0x1b, 0xa4, 0x0e, 0xd5,
	0x63, 0x79, 0x11, 0x38, 0x64, 0x13, 0xa0, 0x1f, 0xa7, 0xfc, 0x50, 0x8c, 0x12, 0xc1, 0x83, 0x0a,
	0x69, 0x41, 0x03, 0xed, 0x8f, 0x8a, 0x17, 0x81, 0xbb, 0xfb, 0x9b, 0x03, 0x1e, 0x5e, 0x13, 0x1c,
	0xd9, 0x7d, 0x31, 0x65, 0x69, 0x12, 0x07, 0x1b, 0xa4, 0x01, 0xee, 0x81, 0x94, 0x3a, 0x70, 0xd0,
	0x7d, 0x2c, 0xb3, 0x44, 0xb0, 0x34, 0xa8, 0x90, 0x00, 0x5a, 0xaf, 0x13, 0x15, 0x49, 0x21, 0xcc,
	0x34, 0x07, 0x55, 0xdc, 0x7e, 0x5f, 0xc8, 0xd3, 0x94, 0x67, 0x81, 0x8b, 0x46, 0xf9, 0x1c, 0x07,
	0x1e, 0x4a, 0xbc, 0x95, 0xd1, 0x79, 0x50, 0x23, 0x00, 0xb5, 0x5e, 0x9a, 0x70, 0xa1, 0x83, 0x3a,
	0xb9, 0x03, 0xcd, 0x13, 0x9e, 0xe5, 0x73, 0x4e, 0x03, 0xc3, 0x19, 0x8c, 0x27, 0x3a, 0x96, 0x17,
	0x22, 0xf0, 0xc9, 0x16, 0xb4, 0x29, 0xcf, 0xa4, 0xe6, 0x3d, 0x29, 0x74, 0x21, 0xd3, 0x00, 0x76,
	0xdf, 0x40, 0xfb, 0xca, 0x5d, 0x6f, 0x23, 0xd2, 0xe3, 0x44, 0x8c, 0x6c, 0xa0, 0xf8, 0xe7, 0x13,
	0x38, 0x28, 0x84, 0xab, 0x94, 0x2b, 0x15, 0x54, 0xd0, 0xff, 0x53, 0x72, 0xa6, 0x6d, 0x84, 0x07,
	0x2c, 0x65, 0x22, 0xe2, 0x81, 0xbb, 0x7b, 0x08, 0xfe, 0xa2, 0xdc, 0xb8, 0x23, 0x16, 0x42, 0x2d,
	0xbc, 0xbc, 0x23, 0x9e, 0x63, 0x5a, 0x0e, 0xd2, 0x63, 0x69, 0xca, 0xd5, 0x00, 0xf7, 0x74, 0xa2,
	0x66, 0x41, 0x95, 0xf8, 0xe5, 0x41, 0x08, 0xdc, 0xd3, 0x9a, 0xf9, 0xf9, 0xfd, 0xe6, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x7c, 0x6b, 0x32, 0xe8, 0x0a, 0x0b, 0x00, 0x00,
}
